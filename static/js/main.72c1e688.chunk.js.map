{"version":3,"sources":["auth.js","artist.js","components/Artist.jsx","history.js","components/History.jsx","components/TopTrack.jsx","components/Login.jsx","components/layouts/Header.jsx","components/layouts/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["client_id","process","REACT_APP_CLIENT_ID","client_secret","REACT_APP_CLIENT_SECRET","auth","Buffer","from","concat","toString","getToken","async","token","axios","post","headers","Authorization","data","access_token","window","localStorage","setItem","e","console","error","id","name","age","position","image","Artist","expandedItem","setExpandedItem","useState","useEffect","items","document","querySelectorAll","forEach","item","i","clicked","addEventListener","expand","it","ind","gsap","to","width","duration","ease","React","createElement","className","artistData","slice","map","member","index","key","style","backgroundImage","renderDescription","date","History","observer","IntersectionObserver","handleIntersection","entries","entry","isIntersecting","target","classList","add","unobserve","threshold","element","observe","disconnect","historyData","history","src","alt","TopTrack","tracks","setTracks","currentTrack","setCurrentTrack","audioRef","useRef","accessToken","Error","response","get","params","q","type","market","limit","log","message","fetchTopTracks","track","album","images","url","onClick","playTrack","previewUrl","preview_url","current","pause","play","ref","controls","autoPlay","Login","email","setEmail","password","setPassword","loginCheck","setLoginCheck","navigate","useNavigate","handleLogin","event","preventDefault","Promise","r","setTimeout","fetch","method","body","JSON","stringify","result","json","status","sessionStorage","role","storeId","onSubmit","htmlFor","value","onChange","color","Header","activeTab","setActiveTab","handleTabClick","tabName","Link","Footer","href","rel","AppContent","LoginWithHeader","Fragment","ArtistWithHeader","HistoryWithHeader","TopTrackWithHeader","App","Routes","Route","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","BrowserRouter","basename"],"mappings":"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","file":"static/js/main.72c1e688.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst client_id = process.env.REACT_APP_CLIENT_ID=\"1003bec15d984f539d363a0d890fec6b\";\r\nconst client_secret = process.env.REACT_APP_CLIENT_SECRET=\"75818f40d0ef4c299c77a90734504053\";\r\nconst auth = Buffer.from(`${client_id}:${client_secret}`).toString('base64');\r\n\r\nexport const getToken = async () => {\r\n  try {\r\n    const res = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      'grant_type=client_credentials',\r\n      {\r\n        headers: {\r\n          Authorization: 'Basic ' + auth,\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n      }\r\n    );\r\n    const token = res.data.access_token;\r\n    window.localStorage.setItem('token', token);\r\n    return token;\r\n  } catch (e) {\r\n    console.error('Error fetching access token:', e);\r\n    return null;\r\n  }\r\n};\r\n","const data = [\r\n    {\r\n      id: 0,\r\n      name: \"Onew\",\r\n      age: \"1989. 12. 14\",\r\n      position: \"리드보컬\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/onew.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"JongHyun\",\r\n      age: \"1990. 04. 08\",\r\n      position: \"메인보컬\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/jonhyun.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Key\",\r\n      age: \"1991. 09. 23\",\r\n      position: \"리드래퍼\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/key.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Minho\",\r\n      age: \"1991. 12. 09\",\r\n      position: \"메인래퍼\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/minho.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name:\"Taemin\",\r\n      age: \"1993. 07. 18\",\r\n      position: \"메인댄서\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/taemin.jpg?raw=true\"\r\n    }\r\n];\r\n\r\nexport default data;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { gsap } from 'gsap'; // gsap import 추가\r\nimport artistData from '../artist.js'; // artist.js에서 데이터 가져오기\r\n\r\nfunction Artist() {\r\n  const [expandedItem, setExpandedItem] = useState(null); // 클릭된 항목의 인덱스를 추적하는 상태\r\n\r\n  useEffect(() => {\r\n    const items = document.querySelectorAll('.item');\r\n\r\n    const expand = (item, i) => {\r\n      items.forEach((it, ind) => {\r\n        if (i === ind) return;\r\n        it.clicked = false;\r\n        gsap.to(it, {\r\n          width: '15vw',\r\n          duration: 2,\r\n          ease: 'elastic(1, .6)',\r\n        });\r\n      });\r\n\r\n      item.clicked = !item.clicked;\r\n      gsap.to(item, {\r\n        width: item.clicked ? '25vw' : '15vw',\r\n        duration: 2.5,\r\n        ease: 'elastic(1, .3)',\r\n      });\r\n    };\r\n\r\n    items.forEach((item, i) => {\r\n      item.clicked = false;\r\n      item.addEventListener('click', () => {\r\n        expand(item, i);\r\n        setExpandedItem(item.clicked ? i : null); // 클릭된 이미지의 인덱스를 설정합니다.\r\n      });\r\n    });\r\n  }, []); // 한 번만 실행되어야 합니다.\r\n\r\n  const renderDescription = () => {\r\n    if (expandedItem !== null) {\r\n      const member = artistData[expandedItem]; // artistData에서 클릭된 이미지의 데이터를 가져옵니다.\r\n\r\n      return (\r\n        <div className=\"description\">\r\n          <h2>{member.name}</h2>\r\n          <p>{member.age}</p>\r\n          <p>Position: {member.position}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null; // 클릭된 이미지가 없으면 아무것도 반환하지 않습니다.\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-5\">\r\n      <h1 className=\"text-white my-5\">ARTIST</h1>\r\n      <p>사진을 클릭하면 아티스트의 정보를 볼 수 있습니다.</p>\r\n      <div className=\"group justify-content-center\">\r\n        {/* 상단 세 명의 아티스트 */}\r\n        <div className=\"artist-row\">\r\n          {artistData.slice(0, 3).map((member, index) => (\r\n            <div\r\n              key={index}\r\n              className={`item ${expandedItem === index ? 'expanded' : ''}`}\r\n              style={{ backgroundImage: `url(${member.image})` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n        {/* 하단 두 명의 아티스트 */}\r\n        <div className=\"artist-row\">\r\n          {artistData.slice(3, 5).map((member, index) => (\r\n            <div\r\n              key={index + 3} // 고유한 키를 생성하기 위해 추가\r\n              className={`item ${expandedItem === index + 3 ? 'expanded' : ''}`}\r\n              style={{ backgroundImage: `url(${member.image})` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {renderDescription()} {/* 클릭된 이미지에 대한 설명을 렌더링합니다. */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Artist;\r\n","const data = [\r\n    {\r\n      id: 0,\r\n      name: \"누난 너무 예뻐\",\r\n      date: \"2008.05.22\",\r\n      style: \"댄스 팝, 알앤비\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album1.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"산소 같은 너\",\r\n      date: \"2008.08.28\",\r\n      style: \"발라드, 댄스 팝\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album2.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"아.미.고\",\r\n      date: \"2008.10.29\",\r\n      style: \"발라드, 댄스 팝\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album3.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"줄리엣 (Juliette)\",\r\n      date: \"2009.05.21\",\r\n      style: \"발라드, 댄스 팝\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album4.jpg?raw=true\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name:\"Lucifer\",\r\n      date: \"2010.07.19\",\r\n      style: \"댄스 팝\",\r\n      image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album5.jpg?raw=true\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name:\"Sherlock\",\r\n        date: \"2012.03.19\",\r\n        style: \"댄스 팝\",\r\n        image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album6.jpg?raw=true\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name:\"View\",\r\n        date: \"\t2015.05.18\",\r\n        style: \"댄스 팝\",\r\n        image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album7.jpg?raw=true\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name:\"Tell Me What To Do\",\r\n        date: \"\t2016.11.15\",\r\n        style: \"발라드, 댄스 팝, 팝\",\r\n        image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album8.jpg?raw=true\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name:\"Don't Call Me\",\r\n        date: \"\t2021.02.22\",\r\n        style: \"댄스 팝\",\r\n        image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album9.jpg?raw=true\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name:\"HARD\",\r\n        date: \"2023.06.26\",\r\n        style: \"댄스 팝, 알앤비, 힙합, 일렉트로닉 팝\",\r\n        image: \"https://github.com/SSuaSea/shinee-fansite/blob/main/album10.jpg?raw=true\"\r\n    }\r\n];\r\n\r\nexport default data;\r\n","import React, { useEffect } from 'react';\r\nimport historyData from '../history';\r\nimport '../style/history.css';\r\n\r\nfunction History() {\r\n  useEffect(() => {\r\n    const handleIntersection = (entries, observer) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add('visible');\r\n          observer.unobserve(entry.target);\r\n        }\r\n      });\r\n    };\r\n\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      threshold: 0.1, // 요소가 10% 보이면 트리거\r\n    });\r\n\r\n    const elements = document.querySelectorAll('.card-body');\r\n    elements.forEach(element => observer.observe(element));\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      <h1 className=\"text-white\">HISTORY</h1>\r\n      {historyData.map((history, index) => (\r\n        <div key={history.id} className={`history-container ${index % 2 === 1 ? 'reverse' : ''}`}>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"container my-5\">\r\n              <div className=\"card text-center\">\r\n                <div className=\"card-img-container\">\r\n                  <img src={history.image} className=\"card-img-top\" alt={history.name} />\r\n                  <div className=\"zoom\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body text-center\">\r\n            <div className=\"text-container\">\r\n              <h5 className=\"card-title\">{history.name}</h5>\r\n              <div className=\"info\">\r\n                <h5 className=\"card-title date\">발매일: {history.date}</h5>\r\n                <h5 className=\"card-title style\">장르: {history.style}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { getToken } from '../auth'; // auth.js 파일의 경로에 따라 수정\r\nimport '../style/toptrack.css';\r\n\r\nfunction TopTrack() {\r\n  const [tracks, setTracks] = useState([]); // 트랙 데이터를 저장할 state 변수 선언\r\n  const [currentTrack, setCurrentTrack] = useState(null); // 현재 재생 중인 트랙 상태\r\n  const audioRef = useRef(null); // audio 요소 참조\r\n\r\n  useEffect(() => {\r\n    const fetchTopTracks = async () => {\r\n      try {\r\n        const accessToken = await getToken(); // getToken 함수 호출하여 액세스 토큰 발급\r\n        if (!accessToken) {\r\n          throw new Error('Failed to get access token'); // 액세스 토큰 발급 실패 시 에러 발생\r\n        }\r\n        const response = await axios.get(\r\n          'https://api.spotify.com/v1/search',\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n            params: {\r\n              q: 'artist:SHINee',\r\n              type: 'track',\r\n              market: 'KR', // 한국(KR) 시장을 기준으로 데이터 요청\r\n              limit: 21, // 최대 20개의 트랙 요청\r\n            },\r\n          }\r\n        );\r\n        console.log('API response:', response.data.tracks.items); // 응답 데이터 구조 확인.\r\n        setTracks(response.data.tracks.items); // 응답 데이터에 따라 수정\r\n      } catch (error) {\r\n        // API 호출 중 에러 발생 시 처리\r\n        console.error('Error fetching top tracks:', error.response ? error.response.data : error.message);\r\n      }\r\n    };\r\n\r\n    fetchTopTracks();\r\n  }, []);\r\n\r\n  // 음악 재생 함수\r\n  const playTrack = (previewUrl) => {\r\n    if (currentTrack === previewUrl) {\r\n      // 이미 재생 중인 트랙을 다시 클릭하면 멈추기\r\n      setCurrentTrack(null);\r\n      if (audioRef.current) {\r\n        audioRef.current.pause(); // 재생 중인 오디오 멈춤\r\n      }\r\n    } else {\r\n      // 새로운 트랙 재생\r\n      setCurrentTrack(previewUrl);\r\n      if (audioRef.current) {\r\n        audioRef.current.src = previewUrl; // 새로운 오디오 소스 설정\r\n        audioRef.current.play(); // 새로운 오디오 재생\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"toptrack\">\r\n      <h2>SHINee's Top Tracks</h2>\r\n      <ul className=\"track-list\">\r\n        {tracks.map((track) => (\r\n          <li key={track.id} className=\"track-item\">\r\n            <img src={track.album.images[0].url} alt={track.album.name} /> {/* 앨범 썸네일 추가 */}\r\n            <div className=\"track-info\">\r\n              <span className=\"track-name\">{track.name}</span>\r\n              <button onClick={() => playTrack(track.preview_url)}>\r\n                {currentTrack === track.preview_url ? 'Stop' : 'Play!'}\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {/* 현재 재생 중인 트랙이 있을 때만 오디오 요소 표시 */}\r\n      {currentTrack && (\r\n        <audio ref={audioRef} controls autoPlay>\r\n          <source src={currentTrack} type=\"audio/mp3\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopTrack;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginCheck, setLoginCheck] = useState(false); // 로그인 상태 체크\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event) => {\r\n    // 로그인 처리 로직\r\n    event.preventDefault();\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    \r\n    const response = await fetch(\r\n      \"http://localhost:3000/api/login\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      }\r\n    );\r\n    const result = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setLoginCheck(false);\r\n      // Store token in local storage\r\n      sessionStorage.setItem(\"token\", result.token);\r\n      sessionStorage.setItem(\"email\", result.email); // userid를 저장\r\n      sessionStorage.setItem(\"role\", result.role); // role을 저장\r\n      sessionStorage.setItem(\"storeid\", result.storeId); // role를 저장\r\n      console.log(\"로그인성공, 이메일주소:\" + result.email);\r\n      navigate(\"/\"); // 로그인 성공시 홈으로 이동합니다.\r\n    } else {\r\n      setLoginCheck(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        <label htmlFor=\"username\">이메일</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"password\">비밀번호</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n         {loginCheck && (\r\n        <label  style={{color: \"red\"}}>이메일 혹은 비밀번호가 틀렸습니다.</label>\r\n        )}\r\n        <button onClick={handleLogin}>로그인</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../layouts/header.css';\r\n\r\nexport default function Header() {\r\n  const [activeTab, setActiveTab] = useState('');\r\n\r\n  const handleTabClick = (tabName) => {\r\n    setActiveTab(tabName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\" className=\"myshinee text-neon\">My SHINee</Link>\r\n      </div>\r\n      <nav className=\"nav-links\">\r\n        <Link to=\"/artist\" className={`nav-link ${activeTab === 'Artist' ? 'active' : ''}`} onClick={() => handleTabClick('Artist')}>Artist</Link>\r\n        <Link to=\"/history\" className={`nav-link ${activeTab === 'History' ? 'active' : ''}`} onClick={() => handleTabClick('History')}>History</Link>\r\n        <Link to=\"/toptrack\" className={`nav-link ${activeTab === 'toptrack' ? 'active' : ''}`} onClick={() => handleTabClick('Top Track')}>Top Track</Link>\r\n      </nav>\r\n      <div className=\"login-container\">\r\n        <Link to=\"/login\" className=\"login-btn\">Login</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport '../layouts/footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"footer-content\">\r\n          <div className=\"footer-logo\">\r\n            <img src=\"/path/to/your/logo.png\" alt=\"Company Logo\" />\r\n          </div>\r\n          <div className=\"footer-links\">\r\n            <ul>\r\n              <li><a href=\"/about\">예시</a></li>\r\n              <li><a href=\"/services\">예시</a></li>\r\n              <li><a href=\"/contact\">예시</a></li>\r\n              <li><a href=\"/privacy\">예시</a></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"footer-social\">\r\n            <a href=\"https://www.facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-facebook-f\"></i>\r\n            </a>\r\n            <a href=\"https://www.twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-twitter\"></i>\r\n            </a>\r\n            <a href=\"https://www.instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fab fa-linkedin-in\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-bottom\">\r\n          <p>&copy; 예시</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Artist from './components/Artist';\nimport History from './components/History';\nimport TopTrack from './components/TopTrack';\nimport Login from './components/Login';\nimport Header from './components/layouts/Header';\nimport Footer from './components/layouts/Footer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  useEffect(() => {\n    // 페이지가 로드될 때 헤더를 렌더링합니다.\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        {/* 루트 경로에 대한 라우팅 */}\n        <Route path=\"/\" element={<AppContent />} />\n        <Route path=\"login\" element={<LoginWithHeader />} />\n        <Route path=\"/history\" element={<HistoryWithHeader />} />\n        <Route path=\"/artist\" element={<ArtistWithHeader />} />\n        <Route path=\"/toptrack\" element={<TopTrackWithHeader/>} />\n        <Route path=\"/app\" element={<AppContent />} />\n      </Routes>\n    </div>\n  );\n}\n\nfunction AppContent() {\n  return (\n    <div className=\"AppContent\">\n      <Header /> {/* 헤더 렌더링 */}\n      <Artist />\n      <History />\n      <TopTrack />\n      <Footer />\n    </div>\n  );\n}\n\nfunction LoginWithHeader() {\n  return (\n    <>\n      <Header /> {/* 헤더 렌더링 */}\n      <Login />\n      <Footer />\n    </>\n  );\n}\n\nfunction ArtistWithHeader() {\n  return (\n    <>\n      <Header /> {/* 헤더 렌더링 */}\n      <Artist />\n      <Footer />\n    </>\n  );\n}\n\nfunction HistoryWithHeader() {\n  return (\n    <>\n      <Header /> {/* 헤더 렌더링 */}\n      <History />\n      <Footer />\n    </>\n  );\n}\n\nfunction TopTrackWithHeader() {\n  return(\n    <>\n    <Header />\n    <TopTrack />\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n    </BrowserRouter>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}